#pragma once
#include <vector>
/*
	Система непересекающихся множеств.
	Не является полноценной реализацией: возможно только создать систему из N 
	пронумерованных элементов, каждый из которых образует множество. Добавить
	новое множество нельзя.
*/
class DSU {
public:

	/* создаёт систему из setCount непересекающихся множеств, id множества является порядковый номер*/
	DSU(int setCount);
	~DSU();

	/*создаёт новое множество с указанным лидером*/
	//void makeSet(int x); // для реализации потребуется заменить массив предков на карту

	/*объединеняет два множества указанных представителей. Амортизированная O(1)*/
	void unite(int x, int y);
	/*возвращает лидера множества указанного представителя. Амортизированная O(1)*/
	int find(int x) const;
	/* возвращает количество множеств */
	int getSetCount() const { return setCount; }
	/* возвращает массив лидеров множеств размера getSetCount(). Массив должен быть уничтожен после использования */
	int * getLeaders() const;
private:
	int * parent;	// массив: по номеру элемента лежит номер его предка (лидер множества является предком сам себе)
	int * rank;		// массив: по номеру элемента лежит высота его поддерева
	int size;		// количество элементов
	int setCount;	// количество множеств / лидеров
};

